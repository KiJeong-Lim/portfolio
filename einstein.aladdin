-- einstein problem

kind country (type).
type norway (country).
type denmark (country).
type england (country).
type german (country).
type sweden (country).

kind beverage (type).
type water (beverage).
type tea (beverage).
type milk (beverage).
type coffee (beverage).
type beer (beverage).

kind cigarette (type).
type dunhill (cigarette).
type blend (cigarette).
type pallmall (cigarette).
type prince (cigarette).
type bluemaster (cigarette).

kind animal (type).
type cat (animal).
type horse (animal). 
type bird (animal).
type fish (animal).
type dog (animal).

kind color (type).
type yellow (color).
type blue (color).
type red (color).
type green (color).
type white (color).

kind house (type).
type house (country -> beverage -> cigarette -> animal -> color -> house).

type copy (A -> A -> o).
copy X X :- true.

type member (A -> list A -> o).
member X (X :: _) :- true.
member X (Y :: Ys) :- member X Ys.

type left_of (house -> house -> list house -> o).
left_of H1 H2 (H1 :: H2 :: _) :- true.
left_of H1 H2 (_ :: Hs) :- left_of H1 H2 Hs.

type neighbor (house -> house -> list house -> o).
neighbor H1 H2 (H1 :: H2 :: _) :- true.
neighbor H1 H2 (H2 :: H1 :: _) :- true.
neighbor H1 H2 (_ :: Hs) :- neighbor H1 H2 Hs.

type answer (list house -> o).
answer Houses :-
    copy [_, _, _, _, _] Houses,
    member (house england _ _ _ red) Houses,
    member (house sweden _ _ dog _) Houses,
    member (house denmark tea _ _ _) Houses,
    left_of (house _ _ _ _ green) (house _ _ _ _ white) Houses,
    member (house _ coffee _ _ green) Houses,
    member (house _ _ pallmall bird _) Houses,
    member (house _ _ dunhill _ yellow) Houses,
    copy [_, _, house _ milk _ _ _, _, _] Houses,
    copy [house norway _ _ _ _, _, _, _, _] Houses,
    neighbor (house _ _ blend _ _) (house _ _ _ cat _) Houses,
    neighbor (house _ _ _ horse _) (house _ _ dunhill _ _) Houses,
    member (house _ beer bluemaster _ _) Houses,
    member (house german _ prince _ _) Houses,
    neighbor (house norway _ _ _ _) (house _ _ _ _ blue) Houses,
    neighbor (house _ _ blend _ _) (house _ water _ _ _) Houses.
