\hshead {
    module Aladdin.Front.Analyzer.Lexer where

    import Aladdin.Front.Analyzer.Grammar
    import Aladdin.Front.Header
}

\define $small_letter = 'a'-'z'
\define $big_letter = 'A'-'Z'
\define $digit = '0'-'9'
\define $symbol = '~' '_' '!' '@' '#' '$' '%' '^' '&' '*' '-' '+' ',' '.' '<' '>' '?' '/' ';' ':' 
\define $Char = [. \ '\n' \ '\\' \ '\"'] + "\\n" + "\\\\" + "\\\"" + "\\\'" + "\\t"
\define $SmallId = [$small_letter] [$small_letter $digit '\'' '_' $big_letter]*
\define $LargeId = [$big_letter] [$small_letter $digit '\'' '_' $big_letter]* + "_"

\xmatch "--" [' ' '\n']*: skip
\xmatch [' ' '\n']+: skip
\xmatch $digit*:
    AT_nat_lit (read this) (SLoc (row1, col1) (row2, col2))
\xmatch \" $Char* \":
    AT_str_lit (read this) (SLoc (row1, col1) (row2, col2))
\xmatch \' $Char \':
    AT_chr_lit (read this) (SLoc (row1, col1) (row2, col2))
\xmatch "." + "(" + ")" + "[" + "]" + "type" + "kind" + "prefix" + "infixl" + "infixr" + "infixn":
    AT_keyword this (SLoc (row1, col1) (row2, col2))
\xmatch $LargeId:
    AT_largeid this (SLoc (row1, col1) (row2, col2))
\xmatch $SmallId + $symbol+:
    AT_smallid this (SLoc (row1, col1) (row2, col2))

\hstail {
}
